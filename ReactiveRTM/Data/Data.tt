<#@ template language="C#" debug="true" #>
<#@ output extension=".generated.cs" #>
<#@ assembly Name="System.Core.dll" #>
<#@ assembly Name="$(SolutionDir)\Lib\IIOP.NET-1.9.3\net4\IIOPChannel.dll" #>
<#@ assembly Name="$(SolutionDir)\idl\RTC.IDL.dll" #>
<#@ assembly Name="$(SolutionDir)\ReactiveRTM.Support\Bin\Debug\ReactiveRTM.Support.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="ReactiveRTM.Support" #>
<#
    var types = typeof(OpenRTM.InPortCdr).Assembly.GetTypes();
#>
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Reactive.Concurrency;
using System.Reactive.Linq;
using System.Threading.Tasks;
using ReactiveRTM.Corba;

<# foreach(var x in DataGenerator.GenerateTemplates(types)) {#>
 
namespace <#= x.Namespace #>
{
	
    <# foreach(var ct in x.ClassTemplates) {#>
 
    public static class <#= ct.StructName #>AsyncExtensions : INotifyPropertyChanged
    {
        <# foreach(var method in ct.PropertyTemplates) {#>
        public <#= method.TypeName #> <#= GeneratorUtility.SnakeCaseToCamelCase(method.Name) #>
        {
            get;
			set;
        }
        <# } #>
    }
    <# }#>
}
<# }#>
